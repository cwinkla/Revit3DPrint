<Workspace Version="1.2.1.3083" X="-330.993649318203" Y="106.287886261941" zoom="0.76947022881878" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="de398f19-9dda-4448-b260-d97475bc1588" type="PythonNodeModels.PythonNode" nickname="DynamicSectionView:Python Script" x="1619.45448688908" y="46.4088452597064" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="5">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <PortInfo index="4" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import Element wrapper extension methods
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.Elements)

# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)

# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import FilteredElementCollector as _FilteredElementCollector
from Autodesk.Revit.DB import ViewFamilyType as _ViewFamilyType

import System
from System import Array
from System.Collections.Generic import *

import sys


def get_ViewFamilyTypeId(viewFamilyTypeName):	
	names = []
	ids = []
	viewFamilyTypeId = -1
	collector = _FilteredElementCollector(doc).OfClass(_ViewFamilyType) #collecting all elements of type ViewFamilyType
	for t in collector:
		names.append(t.FamilyName)
		ids.append(t.Id)
		if t.FamilyName == viewFamilyTypeName:
			viewFamilyTypeId = t.Id
			break # get the first
	return viewFamilyTypeId
			
			
def create_view(doc, viewFamilyTypeId, boundingBox):			
	if viewFamilyTypeId != -1:
		TransactionManager.Instance.EnsureInTransaction(doc)	
		sectionView = ViewSection.CreateDetail(doc, viewFamilyTypeId, boundingBox) # http://www.revitapidocs.com/2016/834e7154-b2f0-ffcd-b04a-9ad8cee321c8.htm
		TransactionManager.Instance.TransactionTaskDone()
		return sectionView


def export_view_images(viewIds, path, pixel_size, doc):
	TransactionManager.Instance.EnsureInTransaction(doc)
	ieo = ImageExportOptions()
	ieo.ExportRange = ExportRange.SetOfViews
	ieo.SetViewsAndSheets(viewIds)
	ieo.FilePath = path	
	ieo.HLRandWFViewsFileType = ImageFileType.PNG
	ieo.ShadowViewsFileType = ImageFileType.PNG
	ieo.PixelSize = pixel_size
	doc.ExportImage(ieo)
	TransactionManager.Instance.TransactionTaskDone()
	
	
def delete_views(doc, views):
	TransactionManager.Instance.EnsureInTransaction(doc)	
	for view in views:
		doc.Delete(view.Id)
	TransactionManager.Instance.TransactionTaskDone()


def scopeBox2cropBox(scopeBox, viewFamilyTypeId, boundingBox, height):
	TransactionManager.Instance.EnsureInTransaction(doc)
	if height &gt;= 0:
		boundingBox.Min = XYZ(boundingBox.Min.X, boundingBox.Min.Y, min(height, boundingBox.Max.Z))
	sectionView = ViewSection.CreateDetail(doc, viewFamilyTypeId, boundingBox) # http://www.revitapidocs.com/2016/834e7154-b2
	param = sectionView.get_Parameter(BuiltInParameter.VIEWER_VOLUME_OF_INTEREST_CROP)
	param.Set(scopeBox.Id)
	TransactionManager.Instance.TransactionTaskDone()
	return sectionView, sectionView.CropBox


def apply_viewTemplate(doc, view, viewTemplateName):
	viewTemplate = None
	collector = FilteredElementCollector(doc).OfClass(View)
	for i in collector:
		if i.IsTemplate == True and i.Name == viewTemplateName:
			viewTemplate = i
	
	TransactionManager.Instance.EnsureInTransaction(doc)
	if viewTemplate is not None:
		view.ViewTemplateId = viewTemplate.Id
	TransactionManager.Instance.TransactionTaskDone()


filePath = IN[0]
voxel_size = IN[1]
scopeBox = UnwrapElement(IN[2])
viewTemplateName = IN[3]
keep_views = IN[4]
doc = DocumentManager.Instance.CurrentDBDocument

views = []
viewIds = []
viewNames = []
try:
	pre_i = 0 # slow issue: delete the first picture
	pre_j = 0
	count = -1
	
	viewFamilyTypeId = get_ViewFamilyTypeId("Detail View")
	boundingBox = scopeBox.get_BoundingBox(None) # https://github.com/DynamoDS/DynamoRevit/blob/Revit2015/src/Libraries/RevitNodes/Elements/Element.cs
	sectionView, cropBox = scopeBox2cropBox(scopeBox, viewFamilyTypeId, boundingBox, -1)
	apply_viewTemplate(doc, sectionView, viewTemplateName)
	
	minPoint = cropBox.Min
	maxPoint = cropBox.Max
	bottom = minPoint.Z
	top = maxPoint.Z
	height = 0
	digit = len(str(int((top - bottom) / voxel_size))) 
	pixel_size = (boundingBox.Max.X - boundingBox.Min.X) * 12 * voxel_size
	
	while height + bottom &lt; top:
		if count &gt; 5:
			break
	
		height += voxel_size
		sectionView_t, cropBox_t = scopeBox2cropBox(scopeBox, viewFamilyTypeId, boundingBox, height)
		apply_viewTemplate(doc, sectionView_t, viewTemplateName)
		
		views.append(sectionView_t)
		viewIds.append(sectionView_t.Id)
		viewNames.append(sectionView_t.ViewName)
		count += 1
		
	TransactionManager.Instance.ForceCloseTransaction() # Dynamo transaction force close order
	imageName = filePath #/ + str(count).rjust(digit)
	export_view_images(viewIds, imageName, pixel_size, doc)
	
	if keep_views == False: # input all as string
			delete_views(doc, views)
			
	OUT = "succeed", sectionView, bottom, top
except Exception as e:
	OUT =  "failed", e
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d5c1fe87-270a-4c1b-9e06-f0552677a491" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="757.089531535513" y="50.4515055008084" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;C:\Dynamo\ViewRange\\test_views\\slice&quot;;&#xA;1;&#xA;&quot;Scope Box 3&quot;;&#xA;&quot;3d Print&quot;;&#xA;false;" ShouldFocus="false" />
    <DSRevitNodesUI.Categories guid="0ac7e01e-a7a9-4303-b005-774a067227d1" type="DSRevitNodesUI.Categories" nickname="Categories" x="417.981156190448" y="291.583260967862" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" index="387:VolumeOfInterest" />
    <DSRevitNodesUI.ElementsOfCategory guid="f85e13f9-fc10-4633-8c7b-0f97c096a2db" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="600.351952806209" y="299.706628066686" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </DSRevitNodesUI.ElementsOfCategory>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="6c1931d9-82ba-49b7-912e-87fa4efa5eac" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.FilterByBoolMask" x="1145.90383013797" y="341.559332245561" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.List.FilterByBoolMask@var[]..[],var[]..[]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="785b7cbd-f4c0-4d9e-9250-f83041b2048c" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Name" x="707.341448788196" y="409.188110678003" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Name">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="45a4b0cd-8901-4ad0-84f9-12d576521c53" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="==" x="947.116208685036" y="405.089396833612" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="Operators" function="==@var[]..[],var[]..[]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9e2cc822-7ab5-48c6-90f6-a74c691943f4" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1288.62209486098" y="228.29274681134" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="x[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="d5c1fe87-270a-4c1b-9e06-f0552677a491" start_index="0" end="de398f19-9dda-4448-b260-d97475bc1588" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5c1fe87-270a-4c1b-9e06-f0552677a491" start_index="1" end="de398f19-9dda-4448-b260-d97475bc1588" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5c1fe87-270a-4c1b-9e06-f0552677a491" start_index="2" end="45a4b0cd-8901-4ad0-84f9-12d576521c53" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5c1fe87-270a-4c1b-9e06-f0552677a491" start_index="3" end="de398f19-9dda-4448-b260-d97475bc1588" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5c1fe87-270a-4c1b-9e06-f0552677a491" start_index="4" end="de398f19-9dda-4448-b260-d97475bc1588" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0ac7e01e-a7a9-4303-b005-774a067227d1" start_index="0" end="f85e13f9-fc10-4633-8c7b-0f97c096a2db" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f85e13f9-fc10-4633-8c7b-0f97c096a2db" start_index="0" end="6c1931d9-82ba-49b7-912e-87fa4efa5eac" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f85e13f9-fc10-4633-8c7b-0f97c096a2db" start_index="0" end="785b7cbd-f4c0-4d9e-9250-f83041b2048c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6c1931d9-82ba-49b7-912e-87fa4efa5eac" start_index="0" end="9e2cc822-7ab5-48c6-90f6-a74c691943f4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="785b7cbd-f4c0-4d9e-9250-f83041b2048c" start_index="0" end="45a4b0cd-8901-4ad0-84f9-12d576521c53" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="45a4b0cd-8901-4ad0-84f9-12d576521c53" start_index="0" end="6c1931d9-82ba-49b7-912e-87fa4efa5eac" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9e2cc822-7ab5-48c6-90f6-a74c691943f4" start_index="0" end="de398f19-9dda-4448-b260-d97475bc1588" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
